<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<project name="filebot-node" default="tar">
	<!-- include default inputs (optional) -->
	<property file="package.properties" />
	<property file="profile.properties" />

	<!-- define source dirs -->
	<property name="dir.client" location="${basedir}/client-extjs" />
	<property name="dir.server" location="${basedir}/server-nodejs" />
	<property name="dir.package" location="${basedir}/package" />
	<property name="dir.build" location="${basedir}/build" />
	<property name="dir.lib" location="${basedir}/lib" />
	<property name="dir.dist" location="${basedir}/dist" />

	<property name="dir.release" location="${basedir}/release" />
	<property name="frs.release" value="web.sourceforge.net:/home/frs/project/f/fi/filebot/filebot-node" />

	<path id="jars.classpath">
		<fileset dir="${dir.lib}" includes="**/*.jar" />
	</path>


	<target name="build">
		<copy todir="${dir.build}/client" includeEmptyDirs="no">
			<fileset dir="${dir.client}">
				<exclude name="build/**" />
				<exclude name="bootstrap.*" />
			</fileset>
		</copy>
		<copy todir="${dir.build}/server" includeEmptyDirs="no">
			<fileset dir="${dir.server}">
				<exclude name="**/*.log" />
				<exclude name="**/test/**" />
			</fileset>
		</copy>

		<replace dir="${dir.build}" encoding="utf-8" summary="yes">
			<include name="client/app.json" />
			<include name="server/package.json" />
			<replacefilter token="0.0.0" value="${version}" />
		</replace>

		<!-- run sencha app build -->
		<exec executable="sencha" dir="${dir.build}/client">
			<arg line="app build production" />
		</exec>

		<copy todir="${dir.dist}/generic/client">
			<fileset dir="${dir.build}/client/build/production/FileBot">
				<include name="**/*.html" />
				<include name="**/*.css" />
				<include name="**/*.js" />
				<include name="**/*.json" />
				<include name="**/*.png" />
				<include name="**/*.gif" />
				<include name="**/*.svg" />
			</fileset>
		</copy>

		<copy todir="${dir.dist}/generic/server">
			<fileset dir="${dir.build}/server">
				<include name="**/*.js" />
				<include name="**/*.json" />
			</fileset>
		</copy>
	</target>


	<target name="tar" description="Build Generic Package" depends="build">
		<tar destfile="${dir.dist}/${package}-${version}-generic.tar.bz2" compression="bzip2" longfile="gnu">
			<tarfileset dir="${dir.dist}/generic" />
			<tarfileset dir="${dir.package}/generic" includes="*.sh" filemode="755" />
		</tar>
	</target>


	<target name="spk" description="Build Synology Package" depends="build">
		<taskdef name="spk" classname="net.filebot.ant.spk.PackageTask" classpathref="jars.classpath" />

		<spk destdir="${dir.dist}" name="${package}" version="${version}" arch="noarch">
			<info name="displayname" value="FileBot Node" />
			<info name="description" value="FileBot Node allows you to execute filebot calls via Synology DSM." />
			<info name="maintainer" value="FileBot" />
			<info name="maintainer_url" value="http://www.filebot.net/" />
			<info name="distributor" value="FileBot" />
			<info name="distributor_url" value="http://www.filebot.net/" />
			<info name="support_url" value="https://github.com/filebot/filebot-node/issues" />
			<info name="helpurl" value="https://www.filebot.net/forums/viewforum.php?f=13" />
			<info name="startable" value="yes" />
			<info name="silent_install" value="yes" />
			<info name="silent_upgrade" value="yes" />
			<info name="silent_uninstall" value="yes" />
			<info name="thirdparty" value="yes" />
			<info name="dsmappname" value="net.filebot.NodeClient" />
			<info name="dsmuidir" value="client" />
			<info name="firmware" value="6.0" />
			<info name="install_dep_packages" value="filebot:Node.js_v4" />

			<icon size="72" file="${dir.package}/synology/package/client/images/filebot_node_72.png" />
			<icon size="256" file="${dir.package}/synology/package/client/images/filebot_node_256.png" />

			<!-- override generic server/start.sh with synology-specific configuration -->
			<package dir="${dir.dist}/generic" />
			<package dir="${dir.package}/synology" includes="*" filemode="755" />
			<package dir="${dir.package}/synology" includes="etc/**" />
			<package dir="${dir.package}/synology/package" includes="client/**" />
			<scripts dir="${dir.package}/synology/scripts" filemode="755" />

			<codesign secring="${dir.package}/gpg/secring.gpg" keyid="${gpg.key}" password="${gpg.pwd}" />
		</spk>
	</target>


	<target name="clean">
		<delete includeEmptyDirs="true" failonerror="false">
			<fileset defaultexcludes="false" dir="${dir.build}" />
			<fileset defaultexcludes="false" dir="${dir.dist}" />
			<fileset defaultexcludes="false" dir="${dir.release}" />
		</delete>
	</target>


	<target name="deploy" depends="login, clean, tar, spk" description="Upload Synology Package">
		<!-- prepare release packages -->
		<copy todir="${dir.release}/${package}-${version}" verbose="yes">
			<fileset dir="${dir.dist}">
				<include name="*.tar.*" />
				<include name="*.spk" />
			</fileset>
		</copy>

		<!-- upload -->
		<scp todir="${sf.user}:${sf.password}@${frs.release}" trust="yes" sftp="true" verbose="yes">
			<fileset dir="${dir.release}">
				<include name="**/*" />
			</fileset>
		</scp>

		<!-- update package source descriptor -->
		<antcall target="update-spksrc" />
	</target>


	<target name="update-spksrc" description="Update Synology Package Source">
		<taskdef name="package-source" classname="net.filebot.ant.spk.RepositoryTask" classpathref="jars.classpath" />

		<package-source file="${basedir}/spksrc.json">
			<keyring file="${dir.package}/gpg/FileBot.pub" />
			<spk file="${dir.dist}/${package}-${version}-noarch.spk">
				<info name="link" value="http://downloads.sourceforge.net/project/filebot/${package}/${package}-${version}/${package}-${version}-noarch.spk" />
				<thumbnail url="http://app.filebot.net/syno/filebot-node-thumbnail.png" />
				<snapshot url="http://app.filebot.net/syno/filebot-node-snapshot.png" />
			</spk>
		</package-source>
	</target>


	<target name="login">
		<!-- ask for sourceforge password -->
		<input message="Please enter sourceforge username:" addproperty="sf.user" />
		<input message="Please enter sourceforge password:" addproperty="sf.password" />
	</target>

</project>
