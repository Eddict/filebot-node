#!/bin/sh -x


# export FILEBOT_NODE_HOST="127.0.0.1" # bind to local nginx reverse proxy
export FILEBOT_NODE_HOST="0.0.0.0"
export FILEBOT_NODE_AUTH="QNAP"

export FILEBOT_NODE_HTTP="YES"
export FILEBOT_NODE_HTTP_PORT="5452"

export USER="admin"                                                                           # set admin as filebot user
export JAVA_OPTS=`free | awk -vm=1024 -vp=0.7 '/Mem:/ {printf "-Xmx%dm", ($2*p)/m; exit}'`    # set -Xmx to 0.7 of physical memory

export FILEBOT_TASK_CMD="/opt/filebot-node/task"

export FILEBOT_CMD="filebot"
export FILEBOT_CMD_CWD=`getcfg SHARE_DEF defVolMP -f /etc/config/def_share.info`
export FILEBOT_CMD_UID=`id -u $USER`
export FILEBOT_CMD_GID=`cat /etc/group | grep 'administrators' | cut -d: -f3`                 # cannot use `id -u $USER` because the result is 100:users but we need 101:administrators because users don't have execute permissions

# export FILEBOT_NODE_CLIENT=""                                                                 # serve client-side code via QTS only
export FILEBOT_NODE_CLIENT="client"

# set working dir
cd "/opt/filebot-node"

# --optimize_for_size (Enables optimizations which favor memory size over execution speed.)
# --use_idle_notification (Use idle notification to reduce memory footprint.)
node --optimize_for_size --use_idle_notification "server/app.js"
